# name: Dummy-golangci-lint
# on:
#   push:
#     branches:
#       - master
#       - main
#   pull_request:
#     branches:
#       - main
# 
# jobs:
#   golangci:
#     name: lint
#     runs-on: ubuntu-latest
#     steps:
#       - name: Exit with success
#         run: exit 0

 name: dynamic-execution
 on:
   push:
     branches:
       - master
       - main
   pull_request:
     branches:
       - main
 jobs:
    dynamic:
     name: dynamic
     runs-on: ubuntu-latest
     steps:
       # - uses: actions/checkout@v2
       # - uses: ouzi-dev/commit-status-updater@v1.1.0
       #   with:
       #     status: "success"
       #     successComment: "action success!"
       - name: Create dummy workflow
         env:
           github_token: ${{ secrets.GITHUB_TOKEN }}
           personal_github_token: ${{ secrets.PERSONAL_GITHUB_TOKEN }}
         run: |
           echo ${GITHUB_SHA::8}
           echo ${GITHUB_SHA}

           # curl -XPOST \
           #   -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
           #   -H "Content-Type: application/json" \
           #   -d "{\"state\": \"success\", \"target_url\": \"http://localhost:8080\", \"description\": \"test\", \"context\": \"lint\"}" \
           #   https://api.github.com/repos/${{ github.repository }}/statuses/${GITHUB_SHA}

           BUILD_COMMIT=$(git rev-parse HEAD)
           curl \
             -X POST \
             -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
             -H "Accept: application/vnd.github.v3+json" \
             https://api.github.com/repos/${{ github.repository }}/check-runs \
             -d '{"name":"lint", "head_sha": "'"$BUILD_COMMIT"'", "status": "completed", "conclusion": "success" }'


           # curl \
           #   -X POST \
           #   -H "Accept: application/vnd.github.v3+json" \
           #   -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
           #   https://api.github.com/repos/${{ github.repository }}/statuses/${GITHUB_SHA} \
           #   -d '{"state":"success", "context": "lint"}'

             # -H "Accept: application/vnd.github.v3+json" \
           # curl \
           #   -X PATCH \
           #   --header "Accept: application/vnd.github.v3+json" \
           #   --header "Authorization: token ${{ secrets.PERSONAL_GITHUB_TOKEN }}" \
           #   https://api.github.com/repos/${{ github.repository }}/branches/docs/protection/required_status_checks \
           #   -d '{"strict":false, "contexts": ["lint"]}'
             # -H "Accept: application/vnd.github.v3+json" \
           # curl \
           #   -X POST \
           #   -H "Content-Type: application/json" \
           #   -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
           #   https://api.github.com/repos/${{ github.repository }}/statuses/${GITHUB_SHA} \
           #   -d "{\"state\":\"success\", \"context\": \"lint\", \"description\": \"Successful\"}"

             # -d '{"strict":false}'
           # curl \
           #   -X POST \
           #   -H "Accept: application/vnd.github.v3+json" \
           #   https://api.github.com/repos/funapy-sandbox/actions-sandbox/statuses/${GITHUB_SHA::8} \
           #   -d '{"state":"success"}'
           # curl \
           #   -X PUT \
           #   -H "Accept: application/vnd.github.v3+json" \
           #   https://api.github.com/repos/funapy-sandbox/actions-sandbox/actions/workflows/golangci-lint.yml/enable
           # curl \
           #   -X PUT \
           #   -H "Accept: application/vnd.github.v3+json" \
           #   -H "Authorization: ${PERSONAL_GITHUB_TOKEN}" \
           #   https://api.github.com/repos/funapy-sandbox/actions-sandbox/actions/workflows/golangci-lint.yml/enable
           # yaml="
           # name: Dummy-golangci-lint
           # on:
           #   push:
           #     branches:
           #       - master
           #       - main
           #   pull_request:
           #     branches:
           #       - main
           # jobs:
           #   golangci:
           #     name: lint
           #     runs-on: ubuntu-latest
           #     steps:
           #       - name: Exit with success
           #         run: exit 0
           # "
           # echo "$yaml"
           # 
           # encoded=`echo $str | base64`
           # echo $encoded
           # 
           # curl \
           #   -H "Accept: application/vnd.github.v3+json" \
           #   https://api.github.com/repos/funapy-sandbox/actions-sandbox/actions/workflows
           # 
           # curl --request POST \
           #      --url "https://api.github.com/repos/funapy-sandbox/actions-sandbox/contents/.github/workflows/test.yml" \
           #      --header "authorization: Bearer ${GITHUB_TOKEN}" \
           #      --header 'content-type: application/json' \
           #      --data "$encoded"
           # exit 0
